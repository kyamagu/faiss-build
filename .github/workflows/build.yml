name: Build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: false  # Disabled for now due to lack of GPU support in GitHub Actions
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            opt_levels: generic,avx2,avx512
          - os: ubuntu-24.04-arm
            opt_levels: generic,sve
          - os: macos-13
            opt_levels: generic,avx2
          - os: macos-14
            opt_levels: generic
          - os: windows-2022
            opt_levels: generic,avx2
          - os: windows-11-arm
            opt_levels: generic
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      # NOTE: You may skip this step for using the standard MSBuild setup, but necessary for ClangCL.
      - name: Setup MSVC environment (Windows)
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.os == 'windows-11-arm' && 'arm64' || 'x64' }}
        if: runner.os == 'Windows'
      - name: Install system dependencies (Windows)
        run: ./scripts/install_Windows.ps1
        if: runner.os == 'Windows'
      - name: Install system dependencies (macOS)
        run: ./scripts/install_macOS.sh
        if: runner.os == 'macOS'
      # NOTE: Linux needs a setup from before-all hook, because they are inside containers.
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_ENVIRONMENT: >
            FAISS_OPT_LEVELS="${{ matrix.opt_levels }}"
      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_cuda_wheels:
    name: Build CUDA wheels
    runs-on: ubuntu-24.04
    if: false  # Disabled for now due to lack of GPU support in GitHub Actions
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_BUILD: cp3*-manylinux_x86_64
          CIBW_ENVIRONMENT: >
            FAISS_GPU_SUPPORT=CUDA

  build_rocm_wheels:
    name: Build ROCm wheels
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_BUILD: cp312-manylinux_x86_64
          CIBW_ENVIRONMENT: >
            FAISS_GPU_SUPPORT=ROCM
            SKBUILD_BUILD_VERBOSE=true
            SKBUILD_CMAKE_DEFINE="CMAKE_HIP_ARCHITECTURES=gfx900"
            LDFLAGS="-L/opt/rh/gcc-toolset-14/root/usr/lib/gcc/x86_64-redhat-linux/14"
